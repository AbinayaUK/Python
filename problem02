1)The greatest common divisor (GCD) of a and b is the largest number that divides both of them with no remainder. 
One way to find the GCD of two numbers is based on the observation that if r is the remainder when a is divided by b, 
then gcd(a, b) = gcd(b, r). As a base case, we can use gcd(a, 0) = a. Write a function called gcd that takes parameters 
a and b and returns their greatest common divisor.




def gcd(a,b):
    if b==0:
        return a
    else:
        return gcd(b, a%b)

"""a=int(input("Enter the 1st value : "))
b=int(input("Enter the 2nd value : "))
print(gcd(a,b))"""


print(gcd(int(input("Enter the 1st value : ")),int(input("Enter the 2nd value : "))))

2)A number, a, is a power of b if it is divisible by b and a/b is a power of b.
Write a function called is_power that takes parameters a and b and returns True if a is a power of b.
Note: you will have to think about the base case.





3)Observe the following function definitions. They Calculate the Factorial as per the Mathematical definition 
1! = 1 (n + 1)! = (n + 1) * n! Implement factI(n) as an Iterative Implementation & factR(n) as a Recursive Implementation

def factI(n):
	"""Assumes that n is an int > 0
	Returns n!
	Uses Iterative Implementation"""
	
def factR(n):
	"""Assumes that n is an int > 0
	Returns n!
	Uses Recursive Implementation"""



def factR(n):
    if n == 1:
        return 1
    else:
        return n*factR(n-1)

result = factR(int(input("Enter a number")))
print("factorial:",result)


---------------------------------------------or----------------------------


def factI(n):
    fact=1
    i=1
    while(i<=n):
        fact=fact*i
        i=i+1
    return fact


result = factI(int(input("Enter a number")))
print("factorial:",result)



4)Write a program that computes the decimal equivalent of the binary number 10011?











