1)Write a Python function that accepts a string and calculate the number of upper case letters and lower case letters.


Sample String : 'The quick Brow Fox'
Expected Output : 
No. of Upper case characters : 3
No. of Lower case Characters : 12


def func(a):
    upper=0
    lower=0
    for i in a:
        if i>='A' and i<='Z':
	    upper+=1
	if i>='a' and i<='z':
	    lower+=1

print("Upper case " ,upper)
print("Lower case ",lower)


a='The quick Brow Fox'
print(func(a))




2)Write a Python function that takes a list and returns a new list with unique elements of 
the first list. Without using set
Sample List : [1,2,3,3,3,3,4,5]
Unique List : [1, 2, 3, 4, 5]



list1=[]
def func(sample_list):
    for i in sample_list:
	    if i not in list1:
	      list1.append(i)
	       print(list1)

sample_list=[1,2,3,3,3,3,4,5]
func(sample_list)


3)Write a Python function to check whether a string is a pangram or not. 


Note : Pangrams are words or sentences containing every letter of the alphabet at 
least once.
For example : "The quick brown fox jumps over the lazy dog"



def is_pangram(a):
    alphabet = "abcdefghijklmnopqrstuvwxyz"
    b= ""
    for char in a
       if char in alphabet:
            b+= char
    for char in alphabet:
        if char not in a:
            print b,alphabet
            return False

    return True
			
    
a="The quick brown fox jumps over the lazy dog"
func(a)


4)Write a Python program that accepts a hyphen-separated sequence of words as input and 
prints the words in a hyphen-separated sequence after sorting them alphabetically. 

Sample Items : green-red-yellow-black-white
Expected Result : black-green-red-white-yellow



s="green-red-yellow-black-white"
li=s.split("-")
li.sort()
print(li)
a="-".join(li)
print(a)
